UserID:
  is: parameter
  from: uriQueryParameter
  named: host_id
  eval: "return (_ != null && _.size() > 0 ? _[0] : null)"

request:
  - method: GET
  - uriPath: /airbnb/v2/reservations
  - where: parameter
    named: UserID
    not equals: null

AccessToken:
  is: parameter
  from: header
  named: X-Airbnb-OAuth-Token

EnvironmentID:
  is: parameter
  from: constant
  value: default

EnvData:
  is: parameter
  from: csv
  file: "${sim.path}/data/environment.csv"
  keys:
  - EnvironmentID

ListingData:
  is: parameter
  from: csv
  file: "${sim.path}/data/listing.csv"
  keys:
  - UserID

LoggedIn:
  is: Parameter
  from: parameter
  named: AccessToken
  eval: return _ == ${ EnvData['AuthToken'] }

NoAccess:
  is: Parameter
  from: constant
  eval: return ${ ListingData['Listings'] } == "0"

ErrorID:
  is: parameter
  from: token
  pattern: "api_frwrk_[0-9a-f]{32}"

responses:
# No Auth
- when:
    request:
    - where: parameter
      named: LoggedIn
      equals: false
  from: stub
  headers:
  - "Content-Type: application/json; charset=UTF-8"

  status: 401
  body:
    type: text
    file: 
      path: "${ sim.path }/common"
      name: "auth_error.json"

# Not Found
- when:
    request:
    - where: parameter
      named: ListingData
      exists: false
  from: template
  headers:
  - "Content-Type: application/json; charset=UTF-8"

  status: 404
  body:
    type: text
    file: 
      path: "${ sim.path }/common"
      name: "obj_not_found.json"

# No Access
- when:
    request:
    - where: parameter
      named: NoAccess
      equals: true
  from: template
  headers:
  - "Content-Type: application/json; charset=UTF-8"

  status: 403
  body:
    type: text
    file: 
      path: "${ sim.path }/common"
      name: "no_access.json"

# Success
- from: template
  headers:
  - "Content-Type: application/json; charset=UTF-8"

  status: 200
  body:
    type: text
    file: 
      path: "${ simlet.path }"
      name: "reservations.json"
